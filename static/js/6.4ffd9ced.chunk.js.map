{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","components/Planet.tsx","containers/PlanetContainer.tsx","pages/PlanetDetail.tsx","components/ButtonAppBar.tsx"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","MEDIA_COMPONENTS","CardMedia","children","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","undefined","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","useStyles","makeStyles","theme","createStyles","minWidth","maxWidth","background","border","borderRadius","boxShadow","color","marginBottom","bullet","margin","transform","title","fontSize","pos","height","paddingTop","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","Planet","planet","loadingPlanet","bull","variant","Typography","rotation_period","orbital_period","diameter","climate","gravity","terrain","population","useEffect","connect","loading","getPlanetById","id","a","console","log","fn","PlanetDetail","ButtonAppBar","path","render","match","params","flexGrow","menuButton","marginRight","spacing","textAlign","small","large","useState","anchorEl","setAnchorEl","handleClose","position","edge","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","keepMounted","open","Boolean","onClose","href","underline","alt"],"mappings":"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","file":"static/js/6.4ffd9ced.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '95%',\r\n      minWidth: 275,\r\n      maxWidth: 350,\r\n      background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n      border: 0,\r\n      borderRadius: 3,\r\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      color: 'white',\r\n      marginBottom: '30px',\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n  }),\r\n);\r\n\r\nfunction Planet({ planet, loadingPlanet }) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <section>\r\n      <br />\r\n      {loadingPlanet && 'Loading...'}\r\n      {!loadingPlanet && planet && (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {bull}{planet.name}{bull}\r\n            </Typography>\r\n            <br />\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={`images/planets/${planet.name}.jpg`}\r\n              title={planet.name}\r\n            />\r\n            <br />\r\n            <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\r\n              Rotation Period\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              {planet.rotation_period}\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\r\n              Orbital Period\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              {planet.orbital_period}\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\r\n              Diameter\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              {planet.diameter}\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\r\n              Climate\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              {planet.climate}\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\r\n              Gravity\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              {planet.gravity}\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\r\n              Terrain\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              {planet.terrain}\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\r\n              Population\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              {planet.population}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Planet;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Planet from '../components/Planet';\r\nimport { getPlanetById } from '../modules/planet';\r\n\r\nconst { useEffect } = React;\r\nconst PlanetContainer = ({\r\n  getPlanetById,\r\n  planet,\r\n  loadingPlanet,\r\n  id\r\n}) => { \r\n  useEffect(() => {\r\n    const fn = async () => {\r\n      try {\r\n        await getPlanetById(id);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    fn();\r\n  }, [getPlanetById, id]);\r\n  return (\r\n    <Planet\r\n      planet={planet}\r\n      loadingPlanet={loadingPlanet}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ planet, loading }) => ({\r\n    planet: planet.planet,\r\n    loadingPlanet: loading['planet/GET_PLANET'],\r\n  }),\r\n  {\r\n    getPlanetById\r\n  }\r\n)(PlanetContainer);\r\n","import React from 'react';\r\nimport PlanetContainer from '../containers/PlanetContainer';\r\nimport { Route } from 'react-router-dom';\r\nimport './Home.css';\r\nimport ButtonAppBar from '../components/ButtonAppBar';\r\n\r\nconst PlanetDetail = ({ loadingPlanet }) => {\r\n  const title = \"Planet\";\r\n  return (\r\n    <>\r\n      <header><ButtonAppBar title={title} /></header>\r\n      <section className=\"container\">\r\n        <Route\r\n          path=\"/planet/:id\"\r\n          render={({ match }) => <PlanetContainer {...loadingPlanet} id={match.params.id} />}\r\n        />  \r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlanetDetail;","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Link from '@material-ui/core/Link';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      textAlign: 'center',\r\n    },\r\n    small: {\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n    },\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function ButtonAppBar({title}) {\r\n  const classes = useStyles();\r\n  \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ background: '#2E3B55' }}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={handleClose}><Link href=\"/starwars_explorer_tsx/#/\" underline=\"none\">Home</Link></MenuItem>\r\n            <MenuItem onClick={handleClose}><Link href=\"/starwars_explorer_tsx/#/people\" underline=\"none\">People</Link></MenuItem>\r\n            <MenuItem onClick={handleClose}><Link href=\"/starwars_explorer_tsx/#/movies\" underline=\"none\">Movies</Link></MenuItem>\r\n            <MenuItem onClick={handleClose}><Link href=\"/starwars_explorer_tsx/#/planets\" underline=\"none\">Planets</Link></MenuItem>\r\n          </Menu>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n           {title}\r\n          </Typography>\r\n          <Button href=\"/starwars_explorer_tsx/#/\"><Avatar alt=\"Star Wars Logo\" src=\"images/starwars_logo.jpg\" className={classes.large} /></Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}